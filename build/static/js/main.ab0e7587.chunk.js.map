{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["AuthFromExcel","email","setEmail","useState","password","setPassword","error","setError","isAuthenticated","setIsAuthenticated","React","createElement","onSubmit","async","e","preventDefault","response","fetch","data","arrayBuffer","workbook","XLSX","type","worksheet","Sheets","SheetNames","users","find","row","Email","Password","toString","validateUser","sheet_to_json","console","style","maxWidth","margin","display","flexDirection","alignItems","width","value","onChange","target","placeholder","required","color","textAlign","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"sLA2rBeA,MAtFOA,KACpB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAUC,GAAeF,mBAAS,KAClCG,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAiBC,GAAsBN,oBAAS,GAqCvD,OACEO,IAAAC,cAAA,WACED,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAI,wBAGLH,EACCE,IAAAC,cAAA,SAAG,mCAEHD,IAAAC,cAAA,QAAMC,SA5BSC,UACnBC,EAAEC,iBAEF,IACE,MAAMC,QAAiBC,MAAM,0BACvBC,QAAaF,EAASG,cACtBC,EAAWC,IAAUH,EAAM,CAAEI,KAAM,UAGnCC,EAAYH,EAASI,OAAOJ,EAASK,WAAW,IAxBpCC,KACPA,EAAMC,KAChBC,GAAQA,EAAIC,QAAU5B,GAAS2B,EAAIE,SAASC,aAAe3B,GAI5DK,GAAmB,IAGnBA,GAAmB,GACnBF,EAAS,gCAiBTyB,CAFcX,IAAWY,cAAcV,IAGvC,MAAOjB,GACPC,EAAS,wCACT2B,QAAQ5B,MAAMA,KAakB6B,MAAO,CAAEC,SAAU,QAASC,OAAQ,WAChE3B,IAAAC,cAAA,OAAKwB,MAAO,CAAEG,QAAS,OAAQC,cAAe,SAAUC,WAAY,WAClE9B,IAAAC,cAAA,SAAOwB,MAAO,CAAEG,QAAS,QAASG,MAAO,SAAU,UACnD/B,IAAAC,cAAA,SACEW,KAAK,OACLoB,MAAOzC,EACP0C,SAAW7B,GAAMZ,EAASY,EAAE8B,OAAOF,OACnCG,YAAY,cACZC,UAAQ,EACRX,MAAO,CAAEG,QAAS,QAASG,MAAO,WAGtC/B,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAKwB,MAAO,CAAEG,QAAS,OAAQC,cAAe,SAAUC,WAAY,WAClE9B,IAAAC,cAAA,SAAOwB,MAAO,CAAEG,QAAS,QAASG,MAAO,SAAU,aACnD/B,IAAAC,cAAA,SACEW,KAAK,WACLoB,MAAOtC,EACPuC,SAAW7B,GAAMT,EAAYS,EAAE8B,OAAOF,OACtCG,YAAY,iBACZC,UAAQ,EACRX,MAAO,CAAEG,QAAS,QAASG,MAAO,WAGtC/B,IAAAC,cAAA,WAECL,GAASI,IAAAC,cAAA,KAAGwB,MAAO,CAAEY,MAAO,MAAOC,UAAW,WAAa1C,GAC5DI,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAQW,KAAK,UAAS,cCvqBnB2B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAACsD,EAAG,QAORhB,K","file":"static/js/main.ab0e7587.chunk.js","sourcesContent":["/*import React, { useState } from \"react\";\n\nfunction MyButton() {\n  return <button>Button</button>;\n}\n\nexport default function MyApp() {\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  return (\n    <div>\n      <center>\n      <h1>Welcome to my page</h1>\n      <MyButton />\n      <h2>What you want to know about Abdul Latheef MM:</h2>\n      </center>\n      <form>\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://open.spotify.com/user/31nfzzijatj2knp23x5lz2mumyiy\"\n            onChange={handleChange}\n          />{\" \"}\n        Spotify\n        </label>\n        </center>\n        <br />\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://www.instagram.com/abdullatheef1601/\"\n            \n            onChange={handleChange}\n          />\n          <img src=\"2227.jpg\" width=\"50\" height=\"50\"/>{\" \"}\n        Instagram\n        </label>\n        </center>\n        <br />\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://www.hackerrank.com/profile/abdullatheef_mm\"\n            onChange={handleChange}\n          />{\" \"}\n        Hacker Rank\n        </label>\n        </center>\n        <br/>\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://leetcode.com/u/abdullatheef1601/\"\n            onChange={handleChange}\n          />{\" \"}\n        Leet Code\n        </label>\n        </center>\n        <br/>\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://www.codechef.com/users/abdul_latheef\"\n            onChange={handleChange}\n          />{\" \"}\n        Code Chef\n        </label>\n        </center>\n        \n      </form>\n      <center>\n      <p>\n        Selected Option:{\" \"}\n        <a href={selectedOption} target=\"_blank\" rel=\"noopener noreferrer\">\n          {selectedOption}\n        </a>\n      </p>\n      </center>\n    </div>\n  );\n  \n}*/\n\n\n\n\n/*\nimport React, { useState } from \"react\";\n\nfunction MyButton() {\n  return <button>Button</button>;\n}\n\nexport default function MyApp() {\n  const [selectedOption, setSelectedOption] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  return (\n    <div>\n      <center>\n      <h1>Welcome to my page</h1>\n      <MyButton />\n      <h2>What you want to know about Abdul Latheef MM:</h2>\n      </center>\n      <form>\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://open.spotify.com/user/31nfzzijatj2knp23x5lz2mumyiy\"\n            onChange={handleChange}\n          />{\" \"}\n        Spotify\n        </label>\n        </center>\n        <br />\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://www.instagram.com/abdullatheef1601/\"\n            onChange={handleChange}\n          />{\" \"}\n        Instagram\n        </label>\n        </center>\n        <br />\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://www.hackerrank.com/profile/abdullatheef_mm\"\n            onChange={handleChange}\n          />{\" \"}\n        Hacker Rank\n        </label>\n        </center>\n        <br/>\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://leetcode.com/u/abdullatheef1601/\"\n            onChange={handleChange}\n          />{\" \"}\n        Leet Code\n        </label>\n        </center>\n        <br/>\n        <center>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"option\"\n            value=\"https://www.codechef.com/users/abdul_latheef\"\n            onChange={handleChange}\n          />{\" \"}\n        Code Chef\n        </label>\n        </center>\n        \n      </form>\n      <center>\n      <p>\n        Selected Option:{\" \"}\n        <a href={selectedOption} target=\"_blank\" rel=\"noopener noreferrer\">\n          {selectedOption}\n        </a>\n      </p>\n      </center>\n    </div>\n  );\n}\n*/\n\n\n\n\n/*\n\n//Counter//\nimport React from 'react';\n\nconst DictionaryExample = () => {\n  const dictionary = {\n    Apple  : \"A fruit that is red or green\",\n    Banana : \"A long yellow fruit\",\n    Cherry : \"A small red fruit\",\n  };\n\n  return (\n    <div style={{ fontFamily: \"Arial, sans-serif\", padding: \"20px\" }}>\n      <h1>Dictionary</h1>\n      {Object.entries(dictionary).map(([key, value]) => (\n        <p key={key}>\n          <strong>{key}:</strong> {value}\n        </p>\n      ))}\n    </div>\n  );\n};\nexport default DictionaryExample;\n*/\n\n\n/*\nimport React, { useState } from 'react';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const decrement = () => {\n    setCount(count - 1);\n  };\n\n  return (\n    <div style={{ fontFamily: \"Arial, sans-serif\", padding: \"20px\" }}>\n      <h1>Counter</h1>\n      <p>Count: {count}</p>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decrement</button>\n    </div>\n  );\n};\n\nexport default Counter;*/\n\n/*\n//Profile Card//\nimport React from 'react';\n\nconst Avatar = ({ src }) => (\n  <img src={src} alt=\"Avatar\" style={{ borderRadius: \"50%\", width: \"60px\", height: \"60px\" }} />\n);\n\nconst UserInfo = ({ name, email, bio }) => (\n  <div>\n    <h2>{name}</h2>\n    <p>{email}</p>\n    <p>{bio}</p>\n  </div>\n);\n\nconst ProfileCard = ({ user }) => (\n  <div style={{ border: \"1px solid #ccc\", borderRadius: \"10px\", padding: \"20px\", maxWidth: \"300px\", textAlign: \"center\", fontFamily: \"Arial, sans-serif\" }}>\n    <Avatar src={user.avatar} />\n    <UserInfo name={user.name} email={user.email} bio={user.bio} />\n  </div>\n);\n\nconst App = () => {\n  const user = {\n    avatar: \"/IMG-20240610-WA0006.jpg\",\n    name: \"Abdul Latheef MM\",\n    email: \"abdullatheef1601@gamil.com\",\n    bio: \"Student at Sri Eshware College\"\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", padding: \"20px\" }}>\n      <ProfileCard user={user} />\n    </div>\n  );\n};\n\nexport default App;\n*/\n\n/*\nimport React, { useState } from \"react\";\n\nconst TextInput = ({ label, type, value, onChange }) => (\n  <div>\n    <label>{label}</label>\n    <input type={type} value={value} onChange={onChange} />\n  </div>\n);\n\nconst SubmitButton = ({ label }) => <button type=\"submit\">{label}</button>;\n\nconst Form = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!username || !password) {\n      alert(\"Both fields are required\");\n      return;\n    }\n\n    const correctUsername = \"Abdul\";\n    const correctPassword = \"Abdul\";\n\n    if (username === correctUsername && password === correctPassword) {\n      alert(\"Login successful\");\n    } else {\n      alert(\"Invalid username or password\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextInput\n        label=\"Username\"\n        type=\"text\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <TextInput\n        label=\"Password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <SubmitButton label=\"Login\" />\n    </form>\n  );\n};\n\nconst App = () => {\n  return <Form />;\n};\n\nexport default App;\n*/\n\n\n/*\nimport React from \"react\";\n\nconst Sibling1 = ({ updateData, label }) => {\n  return <button onClick={() => updateData('${label} clicked!')}>Update {label}</button>;\n};\n\nconst Sibling2 = ({ data }) => {\n  return <p>{data}</p>;\n};\n\nconst Parent = () => {\n  const [data1, setData1] = React.useState(\"\");\n  const [data2, setData2] = React.useState(\"\");\n\n  const siblings = [\n    { label: \"Sibling 1\", updateData: setData1, data: data1 },\n    { label: \"Sibling 2\", updateData: setData2, data: data2 },\n  ];\n\n  return (\n    <div>\n      {siblings.map((sibling, index) => (\n        <div key={index}>\n          <Sibling1 updateData={sibling.updateData} label={sibling.label} />\n          <Sibling2 data={sibling.data} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Parent;\n*/\n\n\n\n/*\nimport React, { createContext, useContext } from \"react\";\n//Multilevel using context API\n\n// Create Context\nconst UserContext = createContext();\n\nconst GrandChild = () => {\n  const user = useContext(UserContext);\n  return <p>Username: {user.name}, \n  Age: {user.age}</p>;\n \n};\n\nconst Child = () => {\n  return <GrandChild />;\n};\n\nconst Parent = () => {\n  const user = { name: \"Abdul Latheef MM\", age: 21 };\n\n  return (\n    <UserContext.Provider value={user}>\n      <Child />\n    </UserContext.Provider>\n  );\n};\n\nexport default Parent;\n\n\n*/\n\n\n/*\nimport React, { createContext, useContext } from \"react\";\nimport { createStore} from \"redux\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\n\n// Reducer \nconst reducer = (state = { message: \"\" }, action) => {\n  switch (action.type) {\n    case \"UPDATE_MESSAGE\":\n      return { ...state, message: action.payload };\n    default:\n      return state;\n  }\n}; \n\n// Store\nconst store = createStore(reducer);\n\n// Sibling1 Component\nconst Sibling1 = () => {\n  const dispatch = useDispatch();\n  return (\n    <button onClick={() => dispatch({ type: \"UPDATE_MESSAGE\", payload: \"Hello from Sibling 1!\" })}>\n      Update Message\n    </button>\n  );\n};\n\n// Sibling2 Component\nconst Sibling2 = () => {\n  const message = useSelector((state) => state.message);\n  return <p>Message: {message}</p>;\n};\n\n// App Component\nconst App = () => (\n  <Provider store={store}>\n    <Sibling1 />\n    <Sibling2 />\n  </Provider>\n);\n\nexport default App;\n\n*/\n\n\n\n/*\nimport React from \"react\";\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\n\n// Slice\nconst messageSlice = createSlice({\n  name: \"message\",\n  initialState: { message: \"\" },\n  reducers: {\n    updateMessage: (state, action) => {\n      state.message = action.payload;\n    },\n  },\n});\n\n// Extract actions and reducer from the slice\nconst { updateMessage } = messageSlice.actions;\nconst messageReducer = messageSlice.reducer;\n\n// Store\nconst store = configureStore({\n  reducer: {\n    message: messageReducer,\n  },\n});\n\n// Sibling1 Component\nconst Sibling1 = () => {\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    dispatch(updateMessage(\"Hello from Sibling 1!\"));\n  };\n  return <button onClick={handleClick}>Update Message</button>;\n};\n\n// Sibling2 Component\nconst Sibling2 = () => {\n  const message = useSelector((state) => state.message.message);\n  return <p>Message: {message || \"No message yet!\"}</p>;\n};\n\n// App Component\nconst App = () => (\n  <Provider store={store}>\n    <div>\n      <h1>Redux Toolkit Example</h1>\n      <Sibling1 />\n      <Sibling2 />\n    </div>\n  </Provider>\n);\n\nexport default App;\n\n*/\n\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport EventEmitter from \"events\";\n\n// Event Bus\nconst eventBus = new EventEmitter();\n\n// Component1 (Sender)\nconst Component1 = () => {\n  const sendMessage = () => {\n    eventBus.emit(\"sendMessage\", \"Hello from Component 1!\");\n  };\n\n  return <button onClick={sendMessage}>Send Message</button>;\n};\n\n// Component2 (Receiver)\nconst Component2 = () => {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    eventBus.on(\"sendMessage\", (msg) => setMessage(msg));\n    return () => eventBus.removeAllListeners(); // Cleanup\n  }, []);\n\n  return <p>Received Message: {message}</p>;\n};\n\nconst App = () => (\n  <div>\n    <Component1 />\n    <Component2 />\n  </div>\n);\n\nexport default App;\n*/\n\n\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport EventEmitter from \"events\";\n\n// Event Bus\nconst eventBus = new EventEmitter();\n\n// Component1 (Sender)\nconst Component1 = () => {\n  const sendMessage = () => {\n    eventBus.emit(\"sendMessage\", \"Hello from Component 1!\");\n  };\n\n  return <button onClick={sendMessage}>Send Message</button>;\n};\n\n// Component2 (Receiver)\nconst Component2 = () => {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    eventBus.on(\"sendMessage\", (msg) => setMessage(msg));\n    return () => eventBus.removeAllListeners(); // Cleanup\n  }, []);\n\n  return <p>Received Message: {message}</p>;\n};\n\nconst App = () => (\n  <div>\n    <Component1 />\n    <Component2 />\n  </div>\n);\n\nexport default App;\n*/\n\n\n\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\n\nconst AuthFromExcel = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n\n  const validateUser = (users) => {\n    const user = users.find(\n      (row) => row.Email === email && row.Password.toString() === password\n    );\n\n    if (user) {\n      setIsAuthenticated(true);\n  \n    } else {\n      setIsAuthenticated(false);\n      setError(\"Invalid email or password.\");\n    }\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"/sample_user_data.xlsx\");\n      const data = await response.arrayBuffer();\n      const workbook = XLSX.read(data, { type: \"array\" });\n\n\n      const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n      const users = XLSX.utils.sheet_to_json(worksheet);\n\n      validateUser(users);\n    } catch (error) {\n      setError(\"Failed to load user data from Excel.\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <center>\n        <h2>User Authentication</h2>\n      </center>\n\n      {isAuthenticated ? (\n        <p>Welcome, you are authenticated!</p>\n      ) : (\n        <form onSubmit={handleSubmit} style={{ maxWidth: \"300px\", margin: \"0 auto\" }}>\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <label style={{ display: \"block\", width: \"100%\" }}>Email:</label>\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter email\"\n              required\n              style={{ display: \"block\", width: \"100%\" }}\n            />\n          </div>\n          <br />\n          <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n            <label style={{ display: \"block\", width: \"100%\" }}>Password:</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter password\"\n              required\n              style={{ display: \"block\", width: \"100%\" }}\n            />\n          </div>\n          <br />\n\n          {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\n          <center>\n            <button type=\"submit\">Submit</button>\n          </center>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default AuthFromExcel;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}