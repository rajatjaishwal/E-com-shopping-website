{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaiss\\\\OneDrive\\\\Desktop\\\\react\\\\src\\\\components\\\\AdminAuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminAuthPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [adminID, setAdminID] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleAdminLogin = async () => {\n    if (!adminID || !password) {\n      setErrorMessage('Please fill in all fields.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/admin-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          adminID,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setErrorMessage(data.message || 'Admin login failed');\n      } else {\n        setErrorMessage('');\n        alert('Admin login successful');\n        navigate('/admin-dashboard'); // Navigate to admin dashboard on success\n      }\n    } catch (error) {\n      setErrorMessage('Error connecting to the server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"return-button\",\n      onClick: () => navigate('/'),\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Admin ID\",\n        className: \"auth-input\",\n        value: adminID,\n        onChange: e => setAdminID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: passwordVisible ? 'text' : 'password',\n          placeholder: \"Password\",\n          className: \"auth-input\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"eye-icon\",\n          onClick: () => setPasswordVisible(!passwordVisible),\n          children: passwordVisible ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdminLogin,\n        className: \"auth-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"VW4JcEyZfkjVFgUIdSQ8Voz/ce8=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AdminPage","_s","adminID","setAdminID","password","setPassword","passwordVisible","setPasswordVisible","errorMessage","setErrorMessage","navigate","handleAdminLogin","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","alert","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/jaiss/OneDrive/Desktop/react/src/components/AdminAuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminAuthPage.css';\r\n\r\nconst AdminPage = () => {\r\n  const [adminID, setAdminID] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleAdminLogin = async () => {\r\n    if (!adminID || !password) {\r\n      setErrorMessage('Please fill in all fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/admin-login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ adminID, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        setErrorMessage(data.message || 'Admin login failed');\r\n      } else {\r\n        setErrorMessage('');\r\n        alert('Admin login successful');\r\n        navigate('/admin-dashboard'); // Navigate to admin dashboard on success\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Error connecting to the server');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <button className=\"return-button\" onClick={() => navigate('/')}>\r\n        ‚Üê\r\n      </button>\r\n      <h1>Admin Login</h1>\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n      <div className=\"auth-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Admin ID\"\r\n          className=\"auth-input\"\r\n          value={adminID}\r\n          onChange={(e) => setAdminID(e.target.value)}\r\n        />\r\n        <div className=\"password-container\">\r\n          <input\r\n            type={passwordVisible ? 'text' : 'password'}\r\n            placeholder=\"Password\"\r\n            className=\"auth-input\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <span\r\n            className=\"eye-icon\"\r\n            onClick={() => setPasswordVisible(!passwordVisible)}\r\n          >\r\n            {passwordVisible ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'}\r\n          </span>\r\n        </div>\r\n        <button onClick={handleAdminLogin} className=\"auth-button\">\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}